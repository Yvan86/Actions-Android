name: Build Android

on:
#  release:
#    types: published
#  push:
#    branches:
#      - master
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: started
    
env:
  REPO_URL: https://android.googlesource.com/device/amlogic/yukawa
  REPO_BRANCH: master
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  SSH_ACTIONS: true
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: false
  UPLOAD_WETRANSFER: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: Clone source code
      working-directory: /workdir
      run: |
        sudo apt update
        sudo apt upgrade -y
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH armbian
        ln -sf /workdir/armbian $GITHUB_WORKSPACE/armbian
        
    - name: Load custom configuration
      run: |
        [ -e files ] && mv files armbian/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE armbian/.config
        chmod +x $DIY_P2_SH
        cd armbian
        $GITHUB_WORKSPACE/$DIY_P2_SH
        
    - name: SSH connection to Actions
      uses: mxschmitt/action-tmate@v3
      if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')       

    - name: Compile the firmware
      id: compile
      if: env.SSH_ACTIONS == 'false'
      run: |
        cd armbian
        ./compile.sh BOARD="arm-64" BRANCH="current" RELEASE="focal" KERNEL_ONLY="no" KERNEL_CONFIGURE="no" BUILD_DESKTOP="no" BUILD_MINIMAL="no"

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' || 'false' && !cancelled()
      run: |
        cd armbian/output
        echo "::set-env name=FIRMWARE::$PWD"
        sudo tar -czvf images.tar.gz images
        sudo tar -czvf debug.tar.gz debug
        sudo tar -czvf debs.tar.gz debs
        sudo tar -czvf config.tar.gz config
        sudo rm -rf images debug
        sudo rm -rf debs*
        echo "::set-output name=status::success"
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: Armbian_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Upload firmware to WeTransfer
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"

